[{"C:\\Users\\poles\\Desktop\\Intercambio\\electronTest\\frontend\\src\\index.js":"1","C:\\Users\\poles\\Desktop\\Intercambio\\electronTest\\frontend\\src\\SplashScreen.js":"2","C:\\Users\\poles\\Desktop\\Intercambio\\electronTest\\frontend\\src\\pages\\index.js":"3","C:\\Users\\poles\\Desktop\\Intercambio\\electronTest\\frontend\\src\\pages\\Gallery\\index.js":"4","C:\\Users\\poles\\Desktop\\Intercambio\\electronTest\\frontend\\src\\pages\\CreateCorpus\\index.js":"5","C:\\Users\\poles\\Desktop\\Intercambio\\electronTest\\frontend\\src\\pages\\ChangeCorpus\\index.js":"6","C:\\Users\\poles\\Desktop\\Intercambio\\electronTest\\frontend\\src\\pages\\GridPage\\index.js":"7","C:\\Users\\poles\\Desktop\\Intercambio\\electronTest\\frontend\\src\\pages\\Tutorial\\index.js":"8","C:\\Users\\poles\\Desktop\\Intercambio\\electronTest\\frontend\\src\\components\\index.js":"9","C:\\Users\\poles\\Desktop\\Intercambio\\electronTest\\frontend\\src\\services\\index.js":"10","C:\\Users\\poles\\Desktop\\Intercambio\\electronTest\\frontend\\src\\components\\Header\\index.js":"11","C:\\Users\\poles\\Desktop\\Intercambio\\electronTest\\frontend\\src\\components\\Button\\index.js":"12","C:\\Users\\poles\\Desktop\\Intercambio\\electronTest\\frontend\\src\\components\\Input\\index.js":"13","C:\\Users\\poles\\Desktop\\Intercambio\\electronTest\\frontend\\src\\components\\BackButton\\index.js":"14","C:\\Users\\poles\\Desktop\\Intercambio\\electronTest\\frontend\\src\\components\\Modal\\index.js":"15","C:\\Users\\poles\\Desktop\\Intercambio\\electronTest\\frontend\\src\\components\\Loading\\index.js":"16","C:\\Users\\poles\\Desktop\\Intercambio\\electronTest\\frontend\\src\\components\\Grid\\index.js":"17","C:\\Users\\poles\\Desktop\\Intercambio\\electronTest\\frontend\\src\\components\\Button\\styles.js":"18","C:\\Users\\poles\\Desktop\\Intercambio\\electronTest\\frontend\\src\\components\\Input\\styles.js":"19","C:\\Users\\poles\\Desktop\\Intercambio\\electronTest\\frontend\\src\\components\\Loading\\styles.js":"20","C:\\Users\\poles\\Desktop\\Intercambio\\electronTest\\frontend\\src\\components\\Grid\\GridRow.js":"21","C:\\Users\\poles\\Desktop\\Intercambio\\electronTest\\frontend\\src\\components\\Grid\\Footer.js":"22","C:\\Users\\poles\\Desktop\\Intercambio\\electronTest\\frontend\\src\\components\\Grid\\Sentences.js":"23","C:\\Users\\poles\\Desktop\\Intercambio\\electronTest\\frontend\\src\\components\\Grid\\GridCell.js":"24","C:\\Users\\poles\\Desktop\\Intercambio\\electronTest\\frontend\\src\\components\\Grid\\Corpus.js":"25"},{"size":1141,"mtime":1701891186666,"results":"26","hashOfConfig":"27"},{"size":1987,"mtime":1696292112643,"results":"28","hashOfConfig":"27"},{"size":266,"mtime":1696277662831,"results":"29","hashOfConfig":"27"},{"size":2036,"mtime":1701982280164,"results":"30","hashOfConfig":"27"},{"size":6410,"mtime":1701891773883,"results":"31","hashOfConfig":"27"},{"size":3354,"mtime":1698092248574,"results":"32","hashOfConfig":"27"},{"size":3733,"mtime":1696294781436,"results":"33","hashOfConfig":"27"},{"size":11198,"mtime":1696294812771,"results":"34","hashOfConfig":"27"},{"size":287,"mtime":1696885196882,"results":"35","hashOfConfig":"27"},{"size":979,"mtime":1697139600577,"results":"36","hashOfConfig":"27"},{"size":174,"mtime":1696277662781,"results":"37","hashOfConfig":"27"},{"size":389,"mtime":1696277662755,"results":"38","hashOfConfig":"27"},{"size":537,"mtime":1696277662785,"results":"39","hashOfConfig":"27"},{"size":536,"mtime":1696294753700,"results":"40","hashOfConfig":"27"},{"size":1263,"mtime":1696277662805,"results":"41","hashOfConfig":"27"},{"size":329,"mtime":1696277662797,"results":"42","hashOfConfig":"27"},{"size":6221,"mtime":1696277662777,"results":"43","hashOfConfig":"27"},{"size":961,"mtime":1696277662757,"results":"44","hashOfConfig":"27"},{"size":526,"mtime":1696277662787,"results":"45","hashOfConfig":"27"},{"size":195,"mtime":1696277662800,"results":"46","hashOfConfig":"27"},{"size":628,"mtime":1696277662774,"results":"47","hashOfConfig":"27"},{"size":2981,"mtime":1696277662768,"results":"48","hashOfConfig":"27"},{"size":1121,"mtime":1696277662775,"results":"49","hashOfConfig":"27"},{"size":2512,"mtime":1696277662771,"results":"50","hashOfConfig":"27"},{"size":1698,"mtime":1696277662764,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1irs9a5",{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\poles\\Desktop\\Intercambio\\electronTest\\frontend\\src\\index.js",[],"C:\\Users\\poles\\Desktop\\Intercambio\\electronTest\\frontend\\src\\SplashScreen.js",[],"C:\\Users\\poles\\Desktop\\Intercambio\\electronTest\\frontend\\src\\pages\\index.js",[],"C:\\Users\\poles\\Desktop\\Intercambio\\electronTest\\frontend\\src\\pages\\Gallery\\index.js",[],"C:\\Users\\poles\\Desktop\\Intercambio\\electronTest\\frontend\\src\\pages\\CreateCorpus\\index.js",["104","105","106","107","108","109","110","111","112"],"import { DndProvider } from 'react-dnd'\r\nimport { HTML5Backend } from 'react-dnd-html5-backend'\r\nimport { useId, useEffect, useState } from \"react\";\r\nimport { Route, Routes, BrowserRouter } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { BackButton, Button, Header, Loading } from 'components'\r\nimport { Icon } from '@iconify/react';\r\nimport { fetchDataFromApi, toQuery } from 'services';\r\n\r\nfunction CreateCorpus() {\r\n\r\n\tconst [grids, setGrids] = useState([]);\r\n\tconst [filepath, setFilepath] = useState([]);\r\n\tconst [filename, setFilename] = useState('');\r\n\tconst [anchor, setAnchor] = useState([]);\r\n\tconst [rowFilename, setRowFilename] = useState('');\r\n\tconst [supercorpus, setSupercorpus] = useState('');\r\n\tconst [validFile, setValidFile] = useState([]);\r\n\tconst [error, setError] = useState(false);\r\n\tconst [errorText, setErrorText] = useState(false);\r\n\tconst [waiting, setWaiting] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchDataFromApi(`/showGrids/`)\r\n\t\t\t.then(data => {\r\n\t\t\t\tsetGrids(data.grids);\r\n\t\t\t\tsetFilepath(data.filepath);\r\n\t\t\t});\r\n\t}, [])\r\n\r\n\tconst navigate = useNavigate();\r\n\r\n\tconst handleInput = (variable, text) => {\r\n\t\tif (variable === 'filename') {\r\n\t\t\tif (grids.includes(text)) {\r\n\t\t\t\tsetValidFile(false)\r\n\t\t\t} else {\r\n\t\t\t\tsetFilename(text)\r\n\t\t\t\tsetValidFile(true)\r\n\t\t\t}\r\n\t\t} else if (variable === 'anchor') {\r\n\t\t\tsetAnchor(text)\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleButton = () => {\r\n\t\tlet text = 'load_all'\r\n\r\n\t\tif (validFile && rowFilename.length > 0) {\r\n\t\t\tif (anchor.length > 0) {\r\n\t\t\t\ttext = anchor\r\n\t\t\t}\r\n\t\t\tsetWaiting(true)\r\n\t\t\tsetError(false)\r\n\t\t\tlet query = toQuery([[\"corpusFilename\", supercorpus], [\"rowFilename\", rowFilename], [\"newFilename\", filename], [\"newAnchor\", text]]);\r\n\t\t\tfetchDataFromApi(`/loadNewGrid/${query}`)\r\n\t\t\t\t.then(data => {\r\n\t\t\t\t\tsetWaiting(false);\r\n\t\t\t\t\tif (data.error) {\r\n\t\t\t\t\t\tsetError(true);\r\n\t\t\t\t\t\tsetErrorText(data.error);\r\n\t\t\t\t\t\tconsole.log(data.error)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnavigate('/grid')\r\n\t\t\t\t\t}\r\n\t\t\t\t}).catch(err => {\r\n\t\t\t\t\tsetErrorText(err.message)\r\n\t\t\t\t\tsetWaiting(false)\r\n\t\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tfunction updateSuperCorpus() {\r\n\r\n\t\tconst input = document.getElementById('superCorpus-upload');\r\n\t\tconst fileNameContainer = document.getElementById(\"superCorpus-name\");\r\n\r\n\t\tif (input.files.length > 0) {\r\n\t\t\tfileNameContainer.textContent = input.files[0].name;\r\n\t\t\tsetSupercorpus(input.files[0].name)\r\n\t\t} else {\r\n\t\t\tfileNameContainer.textContent = \"Nenhum arquivo selecionado\";\r\n\t\t}\r\n\t}\r\n\r\n\tfunction updateRowName() {\r\n\r\n\t\tconst input = document.getElementById('rowName-upload');\r\n\t\tconst fileNameContainer = document.getElementById(\"rowName-name\");\r\n\r\n\t\tif (input.files.length > 0) {\r\n\t\t\tfileNameContainer.textContent = input.files[0].name;\r\n\t\t\tsetRowFilename(input.files[0].name)\r\n\t\t} else {\r\n\t\t\tfileNameContainer.textContent = \"Nenhum arquivo selecionado\";\r\n\t\t}\r\n\t}\r\n\r\n\tconsole.log(supercorpus, rowFilename)\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Header>\r\n\t\t\t\t<BackButton screenName=\"Create a new Grid\" />\r\n\t\t\t</Header>\r\n\r\n\t\t\t<div className='container-input-fileName'>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div className='center-component'>\r\n\t\t\t\t\t\t<div className='input-create'>\r\n\t\t\t\t\t\t\t<div className='label' >\r\n\t\t\t\t\t\t\t\tWhich corpus will you use?\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{!supercorpus && (\r\n\t\t\t\t\t\t\t\t<div className=\"provide-fileName\">\r\n\t\t\t\t\t\t\t\t\t*Please provide a file\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='center-component'>\r\n\t\t\t\t\t\t<div className='input-text'>\r\n\t\t\t\t\t\t\t<label htmlFor=\"superCorpus-upload\" className=\"custom-file-input-label\">\r\n\t\t\t\t\t\t\t\t<Icon icon=\"solar:file-outline\" width=\"20\" height=\"20\" />\r\n\t\t\t\t\t\t\t\t<div>Choose File</div>\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t<span className=\"custom-file-name\" id=\"superCorpus-name\">Corpus filename</span>\r\n\t\t\t\t\t\t\t<input type=\"file\" id=\"superCorpus-upload\" onChange={() => updateSuperCorpus()} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div className='center-component'>\r\n\t\t\t\t\t\t<div className='input-create'>\r\n\t\t\t\t\t\t\t<div className='label' >\r\n\t\t\t\t\t\t\t\tWhich row labels will you use?\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{!rowFilename && (\r\n\t\t\t\t\t\t\t\t<div className=\"provide-fileName\">\r\n\t\t\t\t\t\t\t\t\t*Please provide a file\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='center-component'>\r\n\t\t\t\t\t\t<div className='input-text'>\r\n\t\t\t\t\t\t\t<label htmlFor=\"rowName-upload\" className=\"custom-file-input-label\">\r\n\t\t\t\t\t\t\t\t<Icon icon=\"solar:file-outline\" width=\"20\" height=\"20\" />\r\n\t\t\t\t\t\t\t\t<div>Choose File</div>\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t<span className=\"custom-file-name\" id=\"rowName-name\">Row labels filename</span>\r\n\t\t\t\t\t\t\t<input type=\"file\" id=\"rowName-upload\" onChange={() => updateRowName()} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div className='center-component'>\r\n\t\t\t\t\t\t<div className='input-create'>\r\n\t\t\t\t\t\t\tDo you want to anchor your Grid?\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='center-component'>\r\n\t\t\t\t\t\t<div className=\"input-text\">\r\n\t\t\t\t\t\t\t<input className=\"custom-file-name\" id=\"file-name\" placeholder='Anchor term' onChange={(evt) => handleInput('anchor', evt.target.value)} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div className='center-component'>\r\n\t\t\t\t\t\t<div className='input-create'>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\tWhat filename do you want to save your Grid with?\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{!filename && (\r\n\t\t\t\t\t\t\t\t<div className=\"provide-fileName\">\r\n\t\t\t\t\t\t\t\t\t*Please provide a filename\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='center-component'>\r\n\t\t\t\t\t\t<div className=\"input-text\">\r\n\t\t\t\t\t\t\t<input className=\"custom-file-name\" id=\"file-name\" placeholder='Filename' onChange={(evt) => handleInput('filename', evt.target.value)} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='center-component'>\r\n\t\t\t\t\t<Button label=\"Ready!\" color=\"green\" icon=\"solar:upload-outline\" onClick={() => handleButton()} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{true &&\r\n\t\t\t\t\t\t<div className='center-component'\r\n\t\t\t\t\t\t\tstyle={{ color: 'red' }}>\r\n\t\t\t\t\t\t\t{errorText}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{waiting &&\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<div className='center-component'>\r\n\t\t\t\t\t\t\t\t<Loading />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='center-component'>\r\n\t\t\t\t\t\t\t\tLoading corpus...If this is a new corpus, this step may take several minutes.\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default CreateCorpus;","C:\\Users\\poles\\Desktop\\Intercambio\\electronTest\\frontend\\src\\pages\\ChangeCorpus\\index.js",[],"C:\\Users\\poles\\Desktop\\Intercambio\\electronTest\\frontend\\src\\pages\\GridPage\\index.js",[],"C:\\Users\\poles\\Desktop\\Intercambio\\electronTest\\frontend\\src\\pages\\Tutorial\\index.js",[],"C:\\Users\\poles\\Desktop\\Intercambio\\electronTest\\frontend\\src\\components\\index.js",[],"C:\\Users\\poles\\Desktop\\Intercambio\\electronTest\\frontend\\src\\services\\index.js",[],"C:\\Users\\poles\\Desktop\\Intercambio\\electronTest\\frontend\\src\\components\\Header\\index.js",[],"C:\\Users\\poles\\Desktop\\Intercambio\\electronTest\\frontend\\src\\components\\Button\\index.js",[],"C:\\Users\\poles\\Desktop\\Intercambio\\electronTest\\frontend\\src\\components\\Input\\index.js",[],"C:\\Users\\poles\\Desktop\\Intercambio\\electronTest\\frontend\\src\\components\\BackButton\\index.js",[],"C:\\Users\\poles\\Desktop\\Intercambio\\electronTest\\frontend\\src\\components\\Modal\\index.js",[],"C:\\Users\\poles\\Desktop\\Intercambio\\electronTest\\frontend\\src\\components\\Loading\\index.js",[],"C:\\Users\\poles\\Desktop\\Intercambio\\electronTest\\frontend\\src\\components\\Grid\\index.js",[],"C:\\Users\\poles\\Desktop\\Intercambio\\electronTest\\frontend\\src\\components\\Button\\styles.js",[],"C:\\Users\\poles\\Desktop\\Intercambio\\electronTest\\frontend\\src\\components\\Input\\styles.js",[],"C:\\Users\\poles\\Desktop\\Intercambio\\electronTest\\frontend\\src\\components\\Loading\\styles.js",[],"C:\\Users\\poles\\Desktop\\Intercambio\\electronTest\\frontend\\src\\components\\Grid\\GridRow.js",[],"C:\\Users\\poles\\Desktop\\Intercambio\\electronTest\\frontend\\src\\components\\Grid\\Footer.js",["113"],"import { useState } from \"react\"\r\nimport { Icon } from \"@iconify/react\"\r\nimport { fetchDataFromApi, toQuery } from \"services\"\r\n\r\nexport default function Footer({ id, colName, frozenColumns, onFooter, onDeleteFrozen, editColName, setEditColName }) {\r\n  const [showButtons, setShowButtons] = useState(false)\r\n  const [hoverEdit, setHoverEdit] = useState(false)\r\n  const [hoverDelete, setHoverDelete] = useState(false)\r\n\r\n  return (\r\n    <td key={id}>\r\n      <div style={{\r\n        color: colName.includes('Unassigned') ? '#616160' : (frozenColumns.includes(id) ? '#2c2c2c' : \"#4767AC\"),\r\n        textAlign: \"center\",\r\n        width: \"6em\",\r\n        marginTop: 5,\r\n        padding: 5,\r\n        minHeight: 80,\r\n        cursor: colName.includes('Unassigned') ? 'default' : 'pointer'\r\n      }}\r\n        onMouseEnter={() => setShowButtons(true)}\r\n        onMouseLeave={() => setShowButtons(false)}\r\n      >\r\n        <div>\r\n          {editColName === id ?\r\n            <input\r\n              placeholder={colName}\r\n              className=\"footer\"\r\n              style={{ '--placeholder-color': 'gray' }}\r\n              onKeyDown={\r\n                (evt) => {\r\n                  if (evt.key == \"Enter\") {\r\n                    let query = toQuery([[\"id\", id], [\"name\", evt.target.value]])\r\n                    fetchDataFromApi(`/editName/${query}`)\r\n                      .then(response => {\r\n                        onFooter(response)\r\n                        setEditColName('')\r\n                      })\r\n                    evt.target.value = ''\r\n                    evt.target.blur()\r\n                  }\r\n                }\r\n              }\r\n            /> : colName}\r\n        </div>\r\n        {!colName.includes('Unassigned') && showButtons && (\r\n          <div style={{ marginTop: 10, gap: 5, display: 'flex', justifyContent: 'center', }}>\r\n            <Icon\r\n              icon=\"akar-icons:edit\"\r\n              width=\"20\" height=\"20\"\r\n              color={hoverEdit ? \"#2c2c2c\" : \"#616160\"}\r\n              onClick={() => {\r\n                if (editColName === id) setEditColName('')\r\n                else setEditColName(id)\r\n              }}\r\n              onMouseEnter={() => setHoverEdit(true)}\r\n              onMouseLeave={() => setHoverEdit(false)}\r\n            />\r\n            {frozenColumns.includes(id) &&\r\n              <Icon\r\n                icon=\"octicon:trash-16\"\r\n                width=\"19\" height=\"20\"\r\n                color={hoverDelete ? \"#DC3545\" : \"#616160\"}\r\n                onClick={(evt) => {\r\n                  let query = toQuery([[\"id\", id]])\r\n                  fetchDataFromApi(`/deleteFrozenColumn/${query}`)\r\n                    .then(response => {\r\n                      onDeleteFrozen(response)\r\n                    })\r\n                }}\r\n                onMouseEnter={() => setHoverDelete(true)}\r\n                onMouseLeave={() => setHoverDelete(false)}\r\n              />\r\n            }\r\n          </div>\r\n        )}\r\n      </div>\r\n    </td>\r\n  )\r\n\r\n}\r\n","C:\\Users\\poles\\Desktop\\Intercambio\\electronTest\\frontend\\src\\components\\Grid\\Sentences.js",[],"C:\\Users\\poles\\Desktop\\Intercambio\\electronTest\\frontend\\src\\components\\Grid\\GridCell.js",[],"C:\\Users\\poles\\Desktop\\Intercambio\\electronTest\\frontend\\src\\components\\Grid\\Corpus.js",[],{"ruleId":"114","severity":1,"message":"115","line":1,"column":10,"nodeType":"116","messageId":"117","endLine":1,"endColumn":21},{"ruleId":"114","severity":1,"message":"118","line":2,"column":10,"nodeType":"116","messageId":"117","endLine":2,"endColumn":22},{"ruleId":"114","severity":1,"message":"119","line":3,"column":10,"nodeType":"116","messageId":"117","endLine":3,"endColumn":15},{"ruleId":"114","severity":1,"message":"120","line":4,"column":10,"nodeType":"116","messageId":"117","endLine":4,"endColumn":15},{"ruleId":"114","severity":1,"message":"121","line":4,"column":17,"nodeType":"116","messageId":"117","endLine":4,"endColumn":23},{"ruleId":"114","severity":1,"message":"122","line":4,"column":25,"nodeType":"116","messageId":"117","endLine":4,"endColumn":38},{"ruleId":"114","severity":1,"message":"123","line":5,"column":10,"nodeType":"116","messageId":"117","endLine":5,"endColumn":14},{"ruleId":"114","severity":1,"message":"124","line":14,"column":9,"nodeType":"116","messageId":"117","endLine":14,"endColumn":17},{"ruleId":"114","severity":1,"message":"125","line":20,"column":9,"nodeType":"116","messageId":"117","endLine":20,"endColumn":14},{"ruleId":"126","severity":1,"message":"127","line":32,"column":31,"nodeType":"128","messageId":"129","endLine":32,"endColumn":33},"no-unused-vars","'DndProvider' is defined but never used.","Identifier","unusedVar","'HTML5Backend' is defined but never used.","'useId' is defined but never used.","'Route' is defined but never used.","'Routes' is defined but never used.","'BrowserRouter' is defined but never used.","'Link' is defined but never used.","'filepath' is assigned a value but never used.","'error' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]